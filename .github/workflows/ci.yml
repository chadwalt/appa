name: Test and Build Android & iOS
on: [push, pull_request]

jobs:
  install-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-10.15]
        node: [13]

    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup node @ version
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - name: Install npm dependencies
        run: |
          npm install
      - name: Run tests
        run: |
          npm test

  build-android:
    runs-on: ubuntu-18.04
    needs: install-and-test
    if: contains(github.ref, 'release/')

    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup node @ version
        uses: actions/setup-node@v1
        with:
          node-version: 13
      - name: Install npm dependencies
        run: |
          npm install
      - name: Install JDK for SDK to work
        uses: actions/setup-java@v1
        with:
          java-version: 12 # The JDK version to make available on the path.
          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
          architecture: x64 # (x64 or x86) - defaults to x64
      - name: Install NDK # Temp fix for ongoing gradle issue
        run: |
          echo "y" | sudo /usr/local/lib/android/sdk/tools/bin/sdkmanager --install "ndk;20.0.5594570" --sdk_root=${ANDROID_SDK_ROOT}
      - name: Build debug APK
        run: |
          cd android && ./gradlew assembleDebug --stacktrace
      - name: Upload debug APK
        uses: actions/upload-artifact@v2
        with:
          name: app-debug.apk
          path: android/app/build/outputs/apk/debug/

  build-ios:
    runs-on: macos-10.15
    needs: install-and-test
    if: contains(github.ref, 'release/')

    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup node @ version
        uses: actions/setup-node@v1
        with:
          node-version: 13
      - name: Install npm dependencies
        run: |
          npm install
      - name: Install pod dependencies
        run: |
          cd ios && pod install
      - name: Build app
        run: |
          cd ios
          xcodebuild -workspace WeAgenda.xcworkspace -scheme WeAgenda clean archive -archivePath build/WeAgenda.xcarchive -allowProvisioningUpdates CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGN_ENTITLEMENTS="" CODE_SIGNING_ALLOWED="NO"
          cp -r build/WeAgenda.xcarchive/Products/Applications/WeAgenda.app WeAgenda-debug.app
          zip -r WeAgenda-debug-app.zip WeAgenda-debug.app
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: WeAgenda-debug-app.zip
          path: ios/
